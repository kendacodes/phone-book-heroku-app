{"version":3,"sources":["Service/person.js","Filter.js","Notification.js","PersonForm.js","PhoneBook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","showFilter","setshowFilter","classes","makeStyles","theme","root","margin","spacing","width","useStyles","Box","className","TextField","value","label","variant","onChange","e","target","styles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","fail","Notification","notification","console","log","style","PersonForm","newName","newNumber","addNewName","handleNameChange","handleNumberChange","press","marginLeft","extendedIcon","marginRight","Grid","container","align-items","onSubmit","noValidate","autoComplete","item","xs","Fab","aria-label","type","PhoneBook","persons","removeEntry","backgroundColor","palette","paper","filterUpperCase","toUpperCase","newPersonArray","filter","person","name","includes","map","List","Divider","ListItem","button","ListItemText","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setNotification","setSuccess","flexGrow","justifyItems","text","secondary","overflow","height","header1","textAlign","addFriend","justifyContent","useEffect","personsService","catch","error","showMessage","message","successNotification","setTimeout","Paper","preventDefault","personObject","some","personId","find","updatedEntry","Object","assign","window","confirm","n","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAEMA,EAAU,eA4BD,EAzBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAuB5B,EAnBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAbA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW5B,EAPA,SAAAG,GAEb,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,2BCC5BM,EArBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAStBC,EARYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,YAIGC,GAKhB,OACE,cAACC,EAAA,EAAD,CAAKC,UAAWT,EAAQG,KAAxB,SACG,cAACO,EAAA,EAAD,CAAWhB,GAAG,iBAAiBiB,MAAOb,EAAYc,MAAM,oBAAoBC,QAAQ,WAAUC,SAN7E,SAAAC,GACpBhB,EAAcgB,EAAEC,OAAOL,aCUvBM,EAAS,CACXC,QAAS,CACPC,MAAO,QACPC,WAAY,QACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAEhBC,KAAM,CACJP,MAAO,MACPC,WAAY,QACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAIHE,EA7CM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcV,EAAc,EAAdA,QAKpC,OAJAW,QAAQC,IAAIF,GACZC,QAAQC,IAAIZ,GAGS,OAAjBU,EACK,KAILV,EAEA,qBAAKT,UAAU,UAAUsB,MAAOd,EAAOC,QAAvC,SACGU,IAKH,qBAAKnB,UAAU,UAAUsB,MAAOd,EAAOS,KAAvC,SACGE,K,mCCwDMI,EAtEI,SAAC,GAMb,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,mBAgBMrC,EAdYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,SAGXgC,MAAO,CACLC,WAAY,GACZC,aAAc,CACZC,YAAavC,EAAMG,QAAQ,QAIjBE,GAChB,OACE,cAACmC,EAAA,EAAD,CAAMC,WAAS,EAACtC,QAAS,EAAGuC,cAAY,SAAxC,SACE,uBACEC,SAAUV,EACV1B,UAAWT,EAAQG,KACnB2C,YAAU,EACVC,aAAa,MAJf,UAME,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SAEE,cAACvC,EAAA,EAAD,CACEhB,GAAG,iBACHkB,MAAM,OACND,MAAOsB,EACPnB,SAAUsB,EACV3B,UAAWT,EAAQG,KACnBU,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SAEE,cAACvC,EAAA,EAAD,CACEhB,GAAG,iBACHkB,MAAM,SACND,MAAOuB,EACPpB,SAAUuB,EACV5B,UAAWT,EAAQG,KACnBU,QAAQ,eAGZ,cAAC6B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SAEE,eAACC,EAAA,EAAD,CACErC,QAAQ,WACRM,MAAM,UACNgC,aAAW,MACX1C,UAAWT,EAAQsC,MACnBc,KAAK,SALP,UAOE,cAAC,IAAD,CAAS3C,UAAWT,EAAQwC,eAP9B,yB,qDCxBKa,EA7BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASxD,EAA8B,EAA9BA,WAAYyD,EAAkB,EAAlBA,YAClChD,EAAYN,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJqD,gBAAiBtD,EAAMuD,QAAQrC,WAAWsC,WAI1CC,EAAkB7D,EAAW8D,cAG7BC,EAAiBP,EAAQQ,QAAO,SAAAC,GAElC,OADwBA,EAAOC,KAAKJ,cACXK,SAASN,MAG9B3D,EAAUO,IAGhB,OAAOsD,EAAeK,KAAI,SAAAH,GAAM,OAC9B,eAACI,EAAA,EAAD,CAAM1D,UAAWT,EAAQG,KAAzB,UACE,cAACiE,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,eAACC,EAAA,EAAD,eAAgBR,EAAOC,KAAvB,MAAgCD,EAAOS,UACvC,cAAC,IAAD,CAAWC,QAAS,kBAAMlB,EAAYQ,QAFlBA,EAAOC,a,SCwNpBU,EA1OH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTrB,EADS,KACAsB,EADA,OAEcD,mBAAS,IAFvB,mBAET1C,EAFS,KAEA4C,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTzC,EAHS,KAGE4C,EAHF,OAIoBH,mBAAS,IAJ7B,mBAIT7E,EAJS,KAIGC,EAJH,OAKwB4E,mBAAS,MALjC,mBAKT/C,EALS,KAKKmD,EALL,OAMcJ,mBAAS,MANvB,mBAMTzD,EANS,KAMA8D,EANA,KAQVzE,EAAYN,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8E,SAAU,EACV7E,OAAQ,IAGVsD,MAAO,CACLlC,QAAStB,EAAMG,QAAQ,GACvB6E,aAAc,SACd/D,MAAOjB,EAAMuD,QAAQ0B,KAAKC,UAC1BC,SAAU,OACVC,OAAQ,KAEVC,QAAS,CACP/D,QAAStB,EAAMG,QAAQ,GACvB6E,aAAc,SACd/D,MAAOjB,EAAMuD,QAAQ0B,KAAKC,UAC1BC,SAAU,OACVG,UAAW,UAEbC,UAAW,CACTjE,QAAStB,EAAMG,QAAQ,GACvB6E,aAAc,SACd/D,MAAOjB,EAAMuD,QAAQ0B,KAAKC,UAC1BC,SAAU,OAEVC,OAAQ,IACRI,eAAgB,cAKpBC,qBAAU,WACRC,IAEGvG,MAAK,SAACC,GACLsF,EAAWtF,MAEZuG,OAAM,SAACC,GAAD,OAAWC,EAAY,2BAA2B,QAC1D,IAEH,IAgIMA,EAAc,SAACC,GAAyC,IAAhCC,IAA+B,yDAE3DlB,EAAgBiB,GAEhBhB,EAAWiB,GAGXC,YAAW,WACTnB,EAAgB,MAChBC,EAAW,QACV,MAGChF,EAAUO,IAChB,OACE,cAACC,EAAA,EAAD,CAAKC,UAAWT,EAAQG,KAAxB,SACE,eAACuC,EAAA,EAAD,CAAMC,WAAS,EAACtC,QAAS,EAAzB,UACE,cAACqC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,cAACkD,EAAA,EAAD,CAAO1F,UAAWT,EAAQuF,QAA1B,SACE,gDAGJ,cAAC7C,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACA,eAACkD,EAAA,EAAD,CAAO1F,UAAWT,EAAQyF,UAA1B,UACE,cAACU,EAAA,EAAD,CAAO1F,UAAWT,EAAQuF,QAA1B,SACE,qDAEA,cAAC,EAAD,CACEpD,WA5JO,SAACpB,GAClBA,EAAEqF,iBACF,IAAMC,EAAe,CACnBrC,KAAM/B,EACNuC,OAAQtC,GAMV,GAAIoB,EAAQgD,MAAK,SAACvF,GAAD,OAAOA,EAAEiD,OAAS/B,KAAU,CAE3C,IAAIsE,EAAWjD,EAAQkD,MAAK,SAACxD,GAAD,OAAUA,EAAKgB,OAAS/B,KAGhDwE,EAAeC,OAAOC,OAAOJ,EAAUF,GAIzCO,OAAOC,QAAP,gCAC2B5E,EAD3B,wBACkDC,EADlD,OAKA0D,EACUW,EAAS7G,GAAI2G,GACpBhH,MAAK,WACJuF,EAGEtB,EAAQY,KAAI,SAAClB,GAAD,OACVA,EAAKgB,OAAS/B,EAAUwE,EAAezD,MAI3C6B,EAAW,IACXC,EAAa,IAEbiB,EAAY,QAAD,OAAS9D,EAAT,6BAGZ4D,OAAM,SAACC,GACNC,EAAY,uBAAD,OACc9D,EADd,mDAET,GAEF2C,EAAWtB,EAAQQ,QAAO,SAACgD,GAAD,OAAOA,EAAE9C,OAAS/B,cAK9CqB,EAAQgD,MAAK,SAACvF,GAAD,OAAOA,EAAEyD,SAAWtC,KACnC6D,EAAY,KAAD,OAAM7D,EAAN,mCAAiD,GAG5C,KAAZD,GAAgC,KAAdC,EACpB6D,EAAY,yCAAyC,IAGrDH,EACUS,GACPhH,MAAK,SAAC0H,GACLnC,EAAWtB,EAAQ0D,OAAOD,IAE1BlC,EAAW,IACXC,EAAa,IAEbiB,EAAY,QAAD,OAAS9D,EAAT,yCAGZ4D,OAAM,SAACC,GAEN,OADAjE,QAAQC,IAAIgE,EAAMxG,SAASC,KAAKuG,OACzBC,EAAY,2CAAD,OAC2BD,EAAMxG,SAASC,KAAKuG,QAC/D,MAINF,IAEGvG,MAAK,SAACC,GACLsF,EAAWtF,MAEZuG,OAAM,SAACC,GAAD,OAAWC,EAAY,2BAA2B,QA0EvD9D,QAASA,EACTG,iBAxCa,SAACrB,GAExB8D,EAAW9D,EAAEC,OAAOL,QAuCV0B,mBAnCe,SAACtB,GAC1B+D,EAAa/D,EAAEC,OAAOL,eAuClB,cAAC+B,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACA,eAACkD,EAAA,EAAD,CAAO1F,UAAWT,EAAQyF,UAA1B,UACE,cAACU,EAAA,EAAD,CAAO1F,UAAWT,EAAQuF,QAA1B,SACE,2CAEF,cAAC,EAAD,CAAc3D,aAAcA,EAAcV,QAASA,IACnD,cAAC,EAAD,CAAQpB,WAAYA,EAAYC,cAAeA,IAC/C,cAACoG,EAAA,EAAD,CAAO1F,UAAWT,EAAQ0D,MAA1B,SACE,cAAC,EAAD,CACEJ,QAASA,EACTxD,WAAYA,EACZyD,YAtFQ,SAACQ,GAEf6C,OAAOC,QAAP,iBAAyB9C,EAAOC,KAAhC,OAEF4B,EACU7B,EAAOrE,IACdL,MAAK,WAEJuF,EAAWtB,EAAQQ,QAAO,SAACd,GAAD,OAAUA,EAAKtD,KAAOqE,EAAOrE,OACvDqG,EAAY,GAAD,OAAIhC,EAAOC,KAAX,6CAGZ6B,OAAM,SAACC,GACNC,EAAY,wBAAD,OACehC,EAAOC,KADtB,mDAET,GAGF4B,IAEGvG,MAAK,SAACC,GACLsF,EAAWtF,MAEZuG,OAAM,SAACC,GAAD,OAAWC,EAAY,2BAA2B,yBCtKrEkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3da2d72b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\n// get rquest for all of json data\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\n// post request to add new entry\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\n// put request to update json db\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\n// delete request to delete from json data base \nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\n\n// exporting all of the functions \nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove: remove\n};\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\n\nconst Filter = ({ showFilter, setshowFilter }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n  const classes = useStyles();\n  const filterPersons = e => {\n    setshowFilter(e.target.value);\n  };\n\n  return (\n    <Box className={classes.root}>\n       <TextField id=\"outlined-basic\" value={showFilter} label=\"filter shown with\" variant=\"outlined\"onChange={filterPersons} />\n    </Box>\n  );\n};\n\nexport default Filter;","import React from \"react\";\n\nconst Notification = ({ notification, success }) => {\n  console.log(notification);\n  console.log(success);\n\n  // if there is no notification return null\n  if (notification === null) {\n    return null;\n  }\n\n  // if success renders the paticular (inLine) style \n  if (success)\n    return (\n      <div className=\"success\" style={styles.success}>\n        {notification}\n      </div>\n    );\n  else\n    return (\n      <div className=\"success\" style={styles.fail}>\n        {notification}\n      </div>\n    );\n};\n\nvar styles = {\n  success: {\n    color: \"green\",\n    background: \"white\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  fail: {\n    color: \"red\",\n    background: \"white\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n};\n\nexport default Notification;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  addNewName,\n  handleNameChange,\n  handleNumberChange,\n}) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(2),\n        width: \"50ch\",\n      },\n    },\n    press: {\n      marginLeft: 75,\n      extendedIcon: {\n        marginRight: theme.spacing(1),\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n    <Grid container spacing={1} align-items=\"center\">\n      <form\n        onSubmit={addNewName}\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Grid item xs={12}>\n          {/* calls the function tracking values in the name input */}\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            value={newName}\n            onChange={handleNameChange}\n            className={classes.root}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {/* calls the function tracking values in the numer input */}\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Number\"\n            value={newNumber}\n            onChange={handleNumberChange}\n            className={classes.root}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item xs={6}>\n          {/* calls the create request to add name and number */}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.press}\n            type=\"submit\"\n          >\n            <AddIcon className={classes.extendedIcon} />\n            Add Contact\n          </Fab>\n        </Grid>\n      </form>\n    </Grid>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst PhoneBook = ({ persons, showFilter, removeEntry }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  // capitalize whats in the filter inputs  \n  let filterUpperCase = showFilter.toUpperCase();\n  \n  // filter though persons based on filter inputs value\n  let newPersonArray = persons.filter(person => {\n    let personInUpperCase = person.name.toUpperCase();\n    return personInUpperCase.includes(filterUpperCase);\n  });\n\n  const classes = useStyles();\n\n  // loop through newPersonArray and creat an li for each element\n  return newPersonArray.map(person => (\n    <List className={classes.root}>\n      <Divider/>\n      <ListItem button key={person.name}>\n        <ListItemText> {person.name} : {person.number}</ListItemText>\n        <ClearIcon onClick={() => removeEntry(person)}/>\n      </ListItem>\n    </List>\n  ));\n};\n\nexport default PhoneBook;","import React, { useState, useEffect } from \"react\";\nimport personsService from \"./Service/person\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\nimport PersonForm from \"./PersonForm\";\nimport PhoneBook from \"./PhoneBook\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [showFilter, setshowFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      margin: 50,\n    },\n    \n    paper: {\n      padding: theme.spacing(2),\n      justifyItems: \"center\",\n      color: theme.palette.text.secondary,\n      overflow: \"auto\",\n      height: 450,\n    },\n    header1: {\n      padding: theme.spacing(2),\n      justifyItems: \"center\",\n      color: theme.palette.text.secondary,\n      overflow: \"auto\",\n      textAlign: \"center\",\n    },\n    addFriend: {\n      padding: theme.spacing(2),\n      justifyItems: \"center\",\n      color: theme.palette.text.secondary,\n      overflow: \"auto\",\n\n      height: 650,\n      justifyContent: \"center\",\n    },\n  }));\n\n  // show data on the screen\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then((response) => {\n        setPersons(response);\n      })\n      .catch((error) => showMessage(\"Could not retrieve data\", false));\n  }, []);\n\n  const addNewName = (e) => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    //console.log('persons.some(e => e.name === newName)',persons.some(e => e.name === newName))\n\n    // if name is already in phone book return true and alert user\n    if (persons.some((e) => e.name === newName)) {\n      // first name equal to that name\n      let personId = persons.find((item) => item.name === newName);\n\n      // assigning whats in person obj to person id to update the entry\n      let updatedEntry = Object.assign(personId, personObject);\n\n      // alert the user  to update name  and / or  number\n      if (\n        window.confirm(\n          `Do you want to update ${newName} with number ${newNumber}?`\n        )\n      ) {\n        // based on the condition it will make put request to update\n        personsService\n          .update(personId.id, personObject)\n          .then(() => {\n            setPersons(\n              // map through persons check if name is equal to new name\n              //and either return updatedEntry or item\n              persons.map((item) =>\n                item.name === newName ? updatedEntry : item\n              )\n            );\n            // reset inputs\n            setNewName(\"\");\n            setNewNumber(\"\");\n            // alert user of the changes\n            showMessage(`User ${newName} phone number updated`);\n          })\n          // <-----------------------------------COME BACK AND CHECK ---------------------------------------->\n          .catch((error) => {\n            showMessage(\n              `Update failed. User ${newName} has already been removed from the phone book.`,\n              false\n            );\n            setPersons(persons.filter((n) => n.name !== newName));\n          });\n      }\n    } else {\n      // if number is already in phone book return true and alert user\n      if (persons.some((e) => e.number === newNumber)) {\n        showMessage(`# ${newNumber} is already in the phone book.`, false);\n      } else {\n        // check if inputs are empty and set show message\n        if (newName === \"\" || newNumber === \"\") {\n          showMessage(`The name and number must not be empty`, false);\n        } else {\n          // add personObject to the data base\n          personsService\n            .create(personObject)\n            .then((returnedPerson) => {\n              setPersons(persons.concat(returnedPerson));\n              // reset inputs\n              setNewName(\"\");\n              setNewNumber(\"\");\n              // alert user\n              showMessage(`User ${newName} has been added to the phone book`);\n            })\n            // <-----------------------------------COME BACK AND CHECK ---------------------------------------->\n            .catch((error) => {\n              console.log(error.response.data.error);\n              return showMessage(\n                `Failed to add number. More about error: ${error.response.data.error}`,\n                false\n              );\n            });\n          // make a get requests of updated data\n          personsService\n            .getAll()\n            .then((response) => {\n              setPersons(response);\n            })\n            .catch((error) => showMessage(\"Could not retrieve data\", false));\n        }\n      }\n    }\n  };\n\n  const removeEntry = (person) => {\n    // if user clicks yes to remove\n    if (window.confirm(`Remove ${person.name}?`)) {\n      // call delete request with id that needs to be deleted\n      personsService\n        .remove(person.id)\n        .then(() => {\n          // setPerson to filtered array of every preson but the deleted person\n          setPersons(persons.filter((item) => item.id !== person.id));\n          showMessage(`${person.name} has been removed from the phone book`);\n        })\n        // <-----------------------------------COME BACK AND CHECK ---------------------------------------->\n        .catch((error) => {\n          showMessage(\n            `Removal failed. User ${person.name} has already been removed from the phone book.`,\n            false\n          );\n          // make a get requests of updated data\n          personsService\n            .getAll()\n            .then((response) => {\n              setPersons(response);\n            })\n            .catch((error) => showMessage(\"Could not retrieve data\", false));\n        });\n    }\n  };\n\n  // tracking values in the name input\n  const handleNameChange = (e) => {\n    // console.log(e.target.value);\n    setNewName(e.target.value);\n  };\n\n  // tracking values in the number input\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const showMessage = (message, successNotification = true) => {\n    // sets notication based on the true or false given by the condiyion it was called in\n    setNotification(message);\n    // boolean value if the rquest was successful or not\n    setSuccess(successNotification);\n\n    // the notificatio will stay on browser for 3 sec\n    setTimeout(() => {\n      setNotification(null);\n      setSuccess(null);\n    }, 3000);\n  };\n\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Paper className={classes.header1}>\n            <h2>Phone Book</h2>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n        <Paper className={classes.addFriend}>\n          <Paper className={classes.header1}>\n            <h2>Add a New Contact</h2>\n          </Paper>\n            <PersonForm\n              addNewName={addNewName}\n              newName={newName}\n              handleNameChange={handleNameChange}\n              handleNumberChange={handleNumberChange}\n            />\n        \n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n        <Paper className={classes.addFriend}>\n          <Paper className={classes.header1}>\n            <h2>Numbers</h2>\n          </Paper>\n          <Notification notification={notification} success={success} />\n          <Filter showFilter={showFilter} setshowFilter={setshowFilter} />\n          <Paper className={classes.paper}>\n            <PhoneBook\n              persons={persons}\n              showFilter={showFilter}\n              removeEntry={removeEntry}\n            />\n            </Paper>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}